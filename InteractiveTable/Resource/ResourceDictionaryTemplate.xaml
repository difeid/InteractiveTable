<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	xmlns:Pages="clr-namespace:InteractiveTable.Pages"
	xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:Documents="clr-namespace:System.Windows.Documents;assembly=PresentationUI"
	mc:Ignorable="d">

    <!--Шаблон 6 угольных кнопок-->
    <ControlTemplate x:Key="HexagonButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="hexagon_grid" RenderTransformOrigin="0.5,0.5">
            <ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
                <ed:RegularPolygon.Fill>
                    <ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
                </ed:RegularPolygon.Fill>
            </ed:RegularPolygon>
            <!--Грязный хак с размером текстового поля Задается в MinWidth родительского контейнера-->
            <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
				TextAlignment="Center" MaxWidth="{TemplateBinding MinWidth}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="hexagon_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон кнопоки назад-->
    <ControlTemplate x:Key="BackButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="back_grid" Width="196" Height="50" RenderTransformOrigin="0.5,0.5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image Source="/InteractiveTable;component/Images/Arrow.png" Stretch="Fill" Width="40" Height="40"/>
            <TextBlock Text="{DynamicResource g_BackButton}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="44" Grid.Column="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="back_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон кнопоки father-->
    <ControlTemplate x:Key="FatherButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="father_grid" RenderTransformOrigin="0.5,0.5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Grid.RowSpan="3">
                <ed:RegularPolygon.Fill>
                    <ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
                </ed:RegularPolygon.Fill>
            </ed:RegularPolygon>
            <TextBlock Text="{DynamicResource f_Father}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="30" Foreground="White"
				TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="0"/>
            <TextBlock Text="{DynamicResource f_FatherName}" TextWrapping="Wrap" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="48" Foreground="White" MaxWidth="350"
				TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="father_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон кнопоки mather-->
    <ControlTemplate x:Key="MatherButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="mather_grid" RenderTransformOrigin="0.5,0.5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Grid.RowSpan="3">
                <ed:RegularPolygon.Fill>
                    <ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
                </ed:RegularPolygon.Fill>
            </ed:RegularPolygon>
            <TextBlock Text="{DynamicResource f_Mather}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="30" Foreground="White"
				TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="0"/>
            <TextBlock Text="{DynamicResource f_MatherName}" TextWrapping="Wrap" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="48" Foreground="White" MaxWidth="350"
				TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="mather_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон кнопок вперед назад закрыть-->
    <ControlTemplate x:Key="NavButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="nav_grid" RenderTransformOrigin="0.5,0.5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="70"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle Fill="Transparent" Grid.RowSpan="3"/>
            <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Width="70" Height="70" Margin="{TemplateBinding Padding}" Grid.Row="1"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="{TemplateBinding FontFamily}"
				FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}" Grid.Row="2"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="nav_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Стиль полосы прокрутки-->
    <Style x:Key="TimelineScrollBarStyle" TargetType="{x:Type Pages:BindableScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Pages:BindableScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Grid.Background>
                            <ImageBrush ImageSource="/InteractiveTable;component/Images/Timeline/Track.png"/>
                        </Grid.Background>
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" ViewportSize="120">
                            <Track.Thumb>
                                <Thumb Width="90" Height="120">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Image Source="/InteractiveTable;component/Images/Timeline/Thumb.png"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Шаблон ScrollViewer-->
    <ControlTemplate x:Key="ScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource VerticalScrollBarStyle}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        </Grid>
    </ControlTemplate>

    <!--Стиль вертикальной прокрутки-->
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="MinWidth" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Rectangle Fill="#FFA8A8A8" RadiusX="5" RadiusY="5"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Шаблон кнопоки подробнее-->
    <ControlTemplate x:Key="ReadMoreButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="read_more_grid" Width="155" Height="36" RenderTransformOrigin="0.5,0.5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="36"/>
            </Grid.ColumnDefinitions>
            <Border CornerRadius="5" Grid.ColumnSpan="2" Background="#FFCF142B"/>
            <Image Source="/InteractiveTable;component/Images/Pedigree/ReadMoreArrow.png" Stretch="Fill"
				Width="20" Height="20" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,10,0,0"/>
            <TextBlock Text="{DynamicResource p_ReadMoreButton}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="18"
				HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="White"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="read_more_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон вертикальной кнопки-->
    <ControlTemplate x:Key="VerticalButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="vertical_grid" RenderTransformOrigin="0.5,0.5">
            <Border CornerRadius="5" Background="{TemplateBinding Background}"
				Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                <TextBlock Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
					Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                    <TextBlock.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="vertical_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="1" ScaleX="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон картинки в статье-->
    <ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Grid.Background>
                <ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
            </Grid.Background>
            <Image Source="pack://application:,,,/Images/PopupWindow/Zoom.png" Width="30" Height="30" Margin="14" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
        </Grid>
    </ControlTemplate>
    
    <!--Шаблон скрытых кнопок-->
    <ControlTemplate x:Key="HiddenButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="Transparent"/>
        </Grid>
    </ControlTemplate>

    <!--Шаблон кнопоки закрыть-->
    <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="nav_grid" RenderTransformOrigin="0.5,0.5">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle Fill="Transparent" Grid.RowSpan="2"/>
            <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Width="50" Height="50" Margin="{TemplateBinding Padding}" Grid.Row="0"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="{TemplateBinding FontFamily}"
				FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}" Grid.Row="1"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="nav_grid">
                    <Setter.Value>
                        <ScaleTransform ScaleY="0.96" ScaleX="0.96"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Шаблон книги-->
    <ControlTemplate x:Key="FlowDocumentReaderTemplate" TargetType="{x:Type FlowDocumentReader}">
        <!--  <DockPanel LastChildFill="True" Uid="DockPanel_3">
            
            <Grid Background="{TemplateBinding Background}" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Uid="Grid_31">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="PageCountAndButtons" Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal" Uid="StackPanel_3" VerticalAlignment="Center">
                    <RepeatButton Command="NavigationCommands.PreviousPage" IsEnabled="{TemplateBinding CanGoToPreviousPage}" Uid="RepeatButton_9">
                        <RepeatButton.Style>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Delay" Value="1000"/>
                                <Setter Property="Interval" Value="250"/>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="3,1"/>
                                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </RepeatButton.Style>
                        <Viewbox Height="{TemplateBinding FontSize}" Uid="Viewbox_7">
                            <Path Data="M5,0 L5,10 L0,5 z" Fill="{TemplateBinding Foreground}" Uid="Path_18"/>
                        </Viewbox>
                    </RepeatButton>
                    <TextBlock HorizontalAlignment="Center" Uid="TextBlock_8" VerticalAlignment="Center"><Run Text=" "/><Run Text=" "/><InlineUIContainer>
    						<TextBlock Text="{Binding PageNumber, RelativeSource={RelativeSource TemplatedParent}}" Uid="TextBlock_9"/>
    					</InlineUIContainer><Run Text=" "/><Run Text=" of "/><Run Text=" "/><InlineUIContainer>
    						<TextBlock Text="{Binding PageCount, RelativeSource={RelativeSource TemplatedParent}}" Uid="TextBlock_10"/>
    					</InlineUIContainer><Run Text=" "/><Run Text=" "/></TextBlock>
                    <RepeatButton Command="NavigationCommands.NextPage" IsEnabled="{TemplateBinding CanGoToNextPage}" Uid="RepeatButton_10">
                        <RepeatButton.Style>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Delay" Value="1000"/>
                                <Setter Property="Interval" Value="250"/>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="3,1"/>
                                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </RepeatButton.Style>
                        <Viewbox Height="{TemplateBinding FontSize}" Uid="Viewbox_8">
                            <Path Data="M0,0 L0,10 L5,5 z" Fill="{TemplateBinding Foreground}" Uid="Path_19"/>
                        </Viewbox>
                    </RepeatButton>
                </StackPanel>
            </Grid>
            -->
        <Grid Uid="Grid_33">
            <Border x:Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.IsTabStop="False" Margin="{TemplateBinding Padding}"  Uid="Border_59"/>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>