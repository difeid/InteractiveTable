<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	xmlns:Pages="clr-namespace:InteractiveTable.Pages"
	xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	mc:Ignorable="d">
	
	<!--Шаблон 6 угольных кнопок-->
	<ControlTemplate x:Key="HexagonButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
				<ed:RegularPolygon.Fill>
					<ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
				</ed:RegularPolygon.Fill>
			</ed:RegularPolygon>
			<!--Грязный хак с размером текстового поля Задается в MinWidth родительского контейнера-->
			<TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
				TextAlignment="Center" MaxWidth="{Binding MinWidth}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопоки назад-->
	<ControlTemplate x:Key="BackButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="back_grid" Cursor="Hand" Width="160" Height="40" RenderTransformOrigin="0.5,0.5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="40"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="back_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="back_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Image Source="/InteractiveTable;component/Images/Arrow.png" Stretch="Fill" Width="32" Height="32"/>
			<TextBlock Text="{DynamicResource g_BackButton}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="36" Grid.Column="1"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопоки father-->
	<ControlTemplate x:Key="FatherButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="father_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="father_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="father_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Grid.RowSpan="3">
				<ed:RegularPolygon.Fill>
					<ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
				</ed:RegularPolygon.Fill>
			</ed:RegularPolygon>
			<TextBlock Text="{DynamicResource f_Father}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="24" Foreground="White"
				TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="0"/>
			<TextBlock Text="{DynamicResource f_FatherName}" TextWrapping="Wrap" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="40" Foreground="White" MaxWidth="270"
				TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопоки mather-->
	<ControlTemplate x:Key="MatherButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="mather_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="mather_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="mather_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Grid.RowSpan="3">
				<ed:RegularPolygon.Fill>
					<ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
				</ed:RegularPolygon.Fill>
			</ed:RegularPolygon>
			<TextBlock Text="{DynamicResource f_Mather}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="24" Foreground="White"
				TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="0"/>
			<TextBlock Text="{DynamicResource f_MatherName}" TextWrapping="Wrap" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="40" Foreground="White" MaxWidth="270"
				TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопок фото альбома-->
	<ControlTemplate x:Key="FotoNavButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="nav_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="nav_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="nav_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Fill"/>
		</Grid>
	</ControlTemplate>

	<Style x:Key="TimelineScrollBarStyle" TargetType="{x:Type Pages:BindableScrollBar}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
					<GradientStop Color="#FFE1E1E1" Offset="0"/>
					<GradientStop Color="#FFEDEDED" Offset="0.2"/>
					<GradientStop Color="#FFEDEDED" Offset="0.8"/>
					<GradientStop Color="#FFE3E3E3" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Pages:BindableScrollBar}">
					<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							<RowDefinition Height="1E-05*"/>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
						</Grid.RowDefinitions>
						<RepeatButton Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}" Themes:ScrollChrome.ScrollGlyph="UpArrow">
							<RepeatButton.Style>
								<Style TargetType="{x:Type RepeatButton}">
									<Setter Property="OverridesDefaultStyle" Value="True"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type RepeatButton}">
												<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</RepeatButton.Style>
						</RepeatButton>
						<Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="ScrollBar.PageUpCommand">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Background" Value="Transparent"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="ScrollBar.PageDownCommand">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Background" Value="Transparent"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Themes:ScrollChrome.ScrollGlyph="VerticalGripper">
									<Thumb.Style>
										<Style TargetType="{x:Type Thumb}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Thumb.Style>
								</Thumb>
							</Track.Thumb>
						</Track>
						<RepeatButton Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Themes:ScrollChrome.ScrollGlyph="DownArrow">
							<RepeatButton.Style>
								<Style TargetType="{x:Type RepeatButton}">
									<Setter Property="OverridesDefaultStyle" Value="True"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type RepeatButton}">
												<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</RepeatButton.Style>
						</RepeatButton>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bg" Value="#FFF4F4F4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="Background">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
							<GradientStop Color="#FFE1E1E1" Offset="0"/>
							<GradientStop Color="#FFEDEDED" Offset="0.2"/>
							<GradientStop Color="#FFEDEDED" Offset="0.8"/>
							<GradientStop Color="#FFE3E3E3" Offset="1"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Pages:BindableScrollBar}">
							<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									<ColumnDefinition Width="1E-05*"/>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Grid.ColumnDefinitions>
								<RepeatButton Command="ScrollBar.LineLeftCommand" IsEnabled="{TemplateBinding IsMouseOver}" Themes:ScrollChrome.ScrollGlyph="LeftArrow">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
								<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="ScrollBar.PageLeftCommand">
											<RepeatButton.Style>
												<Style TargetType="{x:Type RepeatButton}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="Background" Value="Transparent"/>
													<Setter Property="Focusable" Value="False"/>
													<Setter Property="IsTabStop" Value="False"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type RepeatButton}">
																<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</RepeatButton.Style>
										</RepeatButton>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="ScrollBar.PageRightCommand">
											<RepeatButton.Style>
												<Style TargetType="{x:Type RepeatButton}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="Background" Value="Transparent"/>
													<Setter Property="Focusable" Value="False"/>
													<Setter Property="IsTabStop" Value="False"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type RepeatButton}">
																<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</RepeatButton.Style>
										</RepeatButton>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Themes:ScrollChrome.ScrollGlyph="HorizontalGripper">
											<Thumb.Style>
												<Style TargetType="{x:Type Thumb}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="IsTabStop" Value="False"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Thumb}">
																<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Thumb.Style>
										</Thumb>
									</Track.Thumb>
								</Track>
								<RepeatButton Grid.Column="2" Command="ScrollBar.LineRightCommand" IsEnabled="{TemplateBinding IsMouseOver}" Themes:ScrollChrome.ScrollGlyph="RightArrow">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="True" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Background" TargetName="Bg" Value="#FFF4F4F4"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>