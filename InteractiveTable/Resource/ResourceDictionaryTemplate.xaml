<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	xmlns:Pages="clr-namespace:InteractiveTable.Pages"
	xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	mc:Ignorable="d">
	
	<!--Шаблон 6 угольных кнопок-->
	<ControlTemplate x:Key="HexagonButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="hexagon_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="hexagon_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="hexagon_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
				<ed:RegularPolygon.Fill>
					<ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
				</ed:RegularPolygon.Fill>
			</ed:RegularPolygon>
			<!--Грязный хак с размером текстового поля Задается в MinWidth родительского контейнера-->
			<TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
				TextAlignment="Center" MaxWidth="{TemplateBinding MinWidth}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопоки назад-->
	<ControlTemplate x:Key="BackButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="back_grid" Cursor="Hand" Width="196" Height="50" RenderTransformOrigin="0.5,0.5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="50"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="back_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="back_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Image Source="/InteractiveTable;component/Images/Arrow.png" Stretch="Fill" Width="40" Height="40"/>
			<TextBlock Text="{DynamicResource g_BackButton}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="44" Grid.Column="1"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопоки father-->
	<ControlTemplate x:Key="FatherButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="father_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="father_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="father_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Grid.RowSpan="3">
				<ed:RegularPolygon.Fill>
					<ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
				</ed:RegularPolygon.Fill>
			</ed:RegularPolygon>
			<TextBlock Text="{DynamicResource f_Father}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="30" Foreground="White"
				TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="0"/>
			<TextBlock Text="{DynamicResource f_FatherName}" TextWrapping="Wrap" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="48" Foreground="White" MaxWidth="350"
				TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопоки mather-->
	<ControlTemplate x:Key="MatherButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="mather_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="mather_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="mather_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ed:RegularPolygon  HorizontalAlignment="Stretch" InnerRadius="1" PointCount="6" Stretch="Fill" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}" Grid.RowSpan="3">
				<ed:RegularPolygon.Fill>
					<ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill"/>
				</ed:RegularPolygon.Fill>
			</ed:RegularPolygon>
			<TextBlock Text="{DynamicResource f_Mather}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="30" Foreground="White"
				TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" Grid.Row="0"/>
			<TextBlock Text="{DynamicResource f_MatherName}" TextWrapping="Wrap" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="48" Foreground="White" MaxWidth="350"
				TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1"/>
		</Grid>
	</ControlTemplate>

    <!--Шаблон кнопок вперед назад-->
	<ControlTemplate x:Key="NavButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="nav_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="nav_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="nav_grid">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
									<EasingDoubleKeyFrame.EasingFunction>
										<ExponentialEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
            <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Fill"/>
            <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="{TemplateBinding FontFamily}"
                       FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}"/>
        </Grid>
	</ControlTemplate>

    <!--Стиль полосы прокрутки-->
    <Style x:Key="TimelineScrollBarStyle" TargetType="{x:Type Pages:BindableScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Pages:BindableScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Grid.Background>
                            <ImageBrush ImageSource="/InteractiveTable;component/Images/Timeline/Track.png"/>
                        </Grid.Background>
                        <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" ViewportSize="140">
                            <Track.Thumb>
                                <Thumb Width="70" Height="100">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Image Source="/InteractiveTable;component/Images/Timeline/Thumb.png"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
	</Style>

    <!--Шаблон ScrollViewer-->
    <ControlTemplate x:Key="ScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
    	<Grid x:Name="Grid" Background="{TemplateBinding Background}">
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="*"/>
    			<ColumnDefinition Width="Auto"/>
    		</Grid.ColumnDefinitions>
    		<Grid.RowDefinitions>
    			<RowDefinition Height="*"/>
    			<RowDefinition Height="Auto"/>
    		</Grid.RowDefinitions>
    		<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
    		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource VerticalScrollBarStyle}"/>
    		<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
    	</Grid>
    </ControlTemplate>
    
    <!--Стиль вертикальной прокрутки-->
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
    	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Rectangle Fill="#FFA8A8A8" RadiusX="5" RadiusY="5"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

    <!--Шаблон скрытых кнопок-->
    <ControlTemplate x:Key="HiddenButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="Transparent"/>
        </Grid>
    </ControlTemplate>

    <!--Шаблон кнопоки подробнее-->
    <ControlTemplate x:Key="ReadMoreButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="read_more_grid" Cursor="Hand" Width="130" Height="30" RenderTransformOrigin="0.5,0.5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="read_more_grid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="read_more_grid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.95">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="5" Grid.ColumnSpan="2" Background="#FFCF142B"/>
            <Image Source="/InteractiveTable;component/Images/Pedigree/ReadMoreArrow.png" Stretch="Fill"
                   Width="20" Height="20" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,7,0,0"/>
            <TextBlock Text="{DynamicResource g_ReadMoreButton}" FontFamily="/InteractiveTable;component/Fonts/#Basil Bold" FontSize="14"
                       HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="White"/>
        </Grid>
    </ControlTemplate>
    
    <!--Шаблон вертикальной кнопки-->
    <ControlTemplate x:Key="VerticalButtonTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="vertical_grid" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="vertical_grid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="5" Background="{TemplateBinding Background}"
                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                <TextBlock Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                    <TextBlock.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <!--Шаблон книги-->
    <ControlTemplate x:Key="FlowDocumentReaderTemplate" TargetType="{x:Type FlowDocumentReader}">
        <DockPanel LastChildFill="True" Uid="DockPanel_3">
            <Grid Background="{TemplateBinding Background}" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Uid="Grid_31">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" Uid="StackPanel_5">
                    <ToggleButton x:Name="FindButton" Command="ApplicationCommands.Find" Focusable="False" Margin="3,0" Uid="ToggleButton_1">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="3,1"/>
                                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.BasedOn>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Opacity" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <Path Stroke="{TemplateBinding Foreground}" Uid="Path_23" VerticalAlignment="Center">
                            <Path.Data>
                                <GeometryGroup>
                                    <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19"/>
                                    <EllipseGeometry Center="12,8" RadiusY="5" RadiusX="5"/>
                                    <EllipseGeometry Center="12,8" RadiusY="4" RadiusX="4"/>
                                    <LineGeometry EndPoint="9,10" StartPoint="2.5,16.5"/>
                                    <LineGeometry EndPoint="9.5,10.5" StartPoint="3,17"/>
                                    <LineGeometry EndPoint="10,11" StartPoint="3.5,17.5"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </ToggleButton>
                    <Border x:Name="PART_FindToolBarHost" HorizontalAlignment="Left" Uid="Border_64" Visibility="Collapsed" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel x:Name="PageCountAndButtons" Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal" Uid="StackPanel_3" VerticalAlignment="Center">
                    <RepeatButton Command="NavigationCommands.PreviousPage" IsEnabled="{TemplateBinding CanGoToPreviousPage}" Uid="RepeatButton_9">
                        <RepeatButton.Style>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Delay" Value="1000"/>
                                <Setter Property="Interval" Value="250"/>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="3,1"/>
                                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </RepeatButton.Style>
                        <Viewbox Height="{TemplateBinding FontSize}" Uid="Viewbox_7">
                            <Path Data="M5,0 L5,10 L0,5 z" Fill="{TemplateBinding Foreground}" Uid="Path_18"/>
                        </Viewbox>
                    </RepeatButton>
                    <TextBlock HorizontalAlignment="Center" Uid="TextBlock_8" VerticalAlignment="Center"><Run Text=" "/><Run Text=" "/><InlineUIContainer>
    						<TextBlock Text="{Binding PageNumber, RelativeSource={RelativeSource TemplatedParent}}" Uid="TextBlock_9"/>
    					</InlineUIContainer><Run Text=" "/><Run Text=" из "/><Run Text=" "/><InlineUIContainer>
    						<TextBlock Text="{Binding PageCount, RelativeSource={RelativeSource TemplatedParent}}" Uid="TextBlock_10"/>
    					</InlineUIContainer><Run Text=" "/><Run Text=" "/></TextBlock>
                    <RepeatButton Command="NavigationCommands.NextPage" IsEnabled="{TemplateBinding CanGoToNextPage}" Uid="RepeatButton_10">
                        <RepeatButton.Style>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Delay" Value="1000"/>
                                <Setter Property="Interval" Value="250"/>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="3,1"/>
                                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="RenderTransform" TargetName="Content">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.3"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </RepeatButton.Style>
                        <Viewbox Height="{TemplateBinding FontSize}" Uid="Viewbox_8">
                            <Path Data="M0,0 L0,10 L5,5 z" Fill="{TemplateBinding Foreground}" Uid="Path_19"/>
                        </Viewbox>
                    </RepeatButton>
                </StackPanel>
                <Grid Grid.Column="2" HorizontalAlignment="Right" Uid="Grid_32" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Uid="StackPanel_4">
                        <RadioButton x:Name="PageViewButton" CommandParameter="Page" Command="FlowDocumentReader.SwitchViewingModeCommand" GroupName="ViewingMode" IsEnabled="{TemplateBinding IsPageViewEnabled}" Uid="RadioButton_1">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_40">
                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Padding" Value="3,1"/>
                                                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="MinWidth" Value="0"/>
                                                    <Setter Property="MinHeight" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </RadioButton.Style>
                            <Path Stroke="{TemplateBinding Foreground}" Uid="Path_20" VerticalAlignment="Center">
                                <Path.Data>
                                    <GeometryGroup>
                                        <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19"/>
                                        <RectangleGeometry Rect="4.5,3.5,11,13"/>
                                        <LineGeometry EndPoint="15.5,4.5" StartPoint="4.5,4.5"/>
                                        <LineGeometry EndPoint="15.5,6.5" StartPoint="4.5,6.5"/>
                                        <LineGeometry EndPoint="15.5,8.5" StartPoint="4.5,8.5"/>
                                        <LineGeometry EndPoint="15.5,10.5" StartPoint="4.5,10.5"/>
                                        <LineGeometry EndPoint="15.5,12.5" StartPoint="4.5,12.5"/>
                                        <LineGeometry EndPoint="15.5,14.5" StartPoint="4.5,14.5"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </RadioButton>
                        <RadioButton x:Name="TwoPageViewButton" CommandParameter="TwoPage" Command="FlowDocumentReader.SwitchViewingModeCommand" GroupName="ViewingMode" IsEnabled="{TemplateBinding IsTwoPageViewEnabled}" Uid="RadioButton_2">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_40">
                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Padding" Value="3,1"/>
                                                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="MinWidth" Value="0"/>
                                                    <Setter Property="MinHeight" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </RadioButton.Style>
                            <Path Stroke="{TemplateBinding Foreground}" Uid="Path_21" VerticalAlignment="Center">
                                <Path.Data>
                                    <GeometryGroup>
                                        <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19"/>
                                        <RectangleGeometry Rect="3.5,3.5,5,13"/>
                                        <LineGeometry EndPoint="8.5,4.5" StartPoint="3.5,4.5"/>
                                        <LineGeometry EndPoint="8.5,6.5" StartPoint="3.5,6.5"/>
                                        <LineGeometry EndPoint="8.5,8.5" StartPoint="3.5,8.5"/>
                                        <LineGeometry EndPoint="8.5,10.5" StartPoint="3.5,10.5"/>
                                        <LineGeometry EndPoint="8.5,12.5" StartPoint="3.5,12.5"/>
                                        <LineGeometry EndPoint="8.5,14.5" StartPoint="3.5,14.5"/>
                                        <RectangleGeometry Rect="11.5,3.5,5,13"/>
                                        <LineGeometry EndPoint="16.5,4.5" StartPoint="11.5,4.5"/>
                                        <LineGeometry EndPoint="16.5,6.5" StartPoint="11.5,6.5"/>
                                        <LineGeometry EndPoint="16.5,8.5" StartPoint="11.5,8.5"/>
                                        <LineGeometry EndPoint="16.5,10.5" StartPoint="11.5,10.5"/>
                                        <LineGeometry EndPoint="16.5,12.5" StartPoint="11.5,12.5"/>
                                        <LineGeometry EndPoint="16.5,14.5" StartPoint="11.5,14.5"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </RadioButton>
                        <RadioButton x:Name="ScrollViewButton" CommandParameter="Scroll" Command="FlowDocumentReader.SwitchViewingModeCommand" GroupName="ViewingMode" IsEnabled="{TemplateBinding IsScrollViewEnabled}" Uid="RadioButton_3">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Uid="Border_40">
                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_3"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.BasedOn>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Style.BasedOn>
                                                <Style TargetType="{x:Type ButtonBase}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Padding" Value="3,1"/>
                                                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="MinWidth" Value="0"/>
                                                    <Setter Property="MinHeight" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="Content">
                                                                            <Setter.Value>
                                                                                <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value="0.3"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.BasedOn>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Style.BasedOn>
                                </Style>
                            </RadioButton.Style>
                            <Path Stroke="{TemplateBinding Foreground}" Uid="Path_22" VerticalAlignment="Center">
                                <Path.Data>
                                    <GeometryGroup>
                                        <RectangleGeometry RadiusY="1" RadiusX="1" Rect="0.5,0.5,19,19"/>
                                        <RectangleGeometry Rect="3.5,3.5,8,13"/>
                                        <LineGeometry EndPoint="11.5,4.5" StartPoint="3.5,4.5"/>
                                        <LineGeometry EndPoint="11.5,6.5" StartPoint="3.5,6.5"/>
                                        <LineGeometry EndPoint="11.5,8.5" StartPoint="3.5,8.5"/>
                                        <LineGeometry EndPoint="11.5,10.5" StartPoint="3.5,10.5"/>
                                        <LineGeometry EndPoint="11.5,12.5" StartPoint="3.5,12.5"/>
                                        <LineGeometry EndPoint="11.5,14.5" StartPoint="3.5,14.5"/>
                                        <RectangleGeometry Rect="13.5,3.5,3,13"/>
                                        <RectangleGeometry Rect="14.5,4.5,1,3"/>
                                        <RectangleGeometry Rect="14.5,12.5,1,3"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </RadioButton>
                    </StackPanel>
                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Command="NavigationCommands.DecreaseZoom" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsEnabled="{TemplateBinding CanDecreaseZoom}" Uid="RepeatButton_11" Width="{TemplateBinding FontSize}">
                        <RepeatButton.LayoutTransform>
                            <ScaleTransform ScaleY="2.2" ScaleX="2.2"/>
                        </RepeatButton.LayoutTransform>
                        <RepeatButton.Style>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="Padding" Value="2,2,0,2"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_41">
                                                <Viewbox x:Name="Content" RenderTransformOrigin="0.5,0.5" Uid="Viewbox_2">
                                                    <Canvas Height="32" Uid="Canvas_4" Width="32">
                                                        <Path Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Height="32" Uid="Path_7" Width="32">
                                                            <Path.Data>
                                                                <GeometryGroup>
                                                                    <EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                        </Path>
                                                        <Path x:Name="Sheen" Height="32" Uid="Path_8" Width="32">
                                                            <Path.Data>
                                                                <GeometryGroup>
                                                                    <EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                            <Path.Fill>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                                                    <GradientStop Color="#66000000" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Path.Fill>
                                                        </Path>
                                                        <Path Canvas.Left="16" Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="5" Canvas.Top="16" Uid="Path_9">
                                                            <Path.Data>
                                                                <LineGeometry EndPoint="10,0" StartPoint="-10,0"/>
                                                            </Path.Data>
                                                        </Path>
                                                    </Canvas>
                                                </Viewbox>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Fill" TargetName="Sheen">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                <GradientStop Color="#99000000" Offset="0"/>
                                                                <GradientStop Color="#66FFFFFF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="Padding" Value="5"/>
                                        <Setter Property="Delay" Value="1000"/>
                                        <Setter Property="Interval" Value="250"/>
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Padding" Value="3,1"/>
                                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </RepeatButton.Style>
                    </RepeatButton>
                    <Slider Grid.Column="2" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" LargeChange="{TemplateBinding ZoomIncrement}" Maximum="{TemplateBinding MaxZoom}" Minimum="{TemplateBinding MinZoom}" SmallChange="{TemplateBinding ZoomIncrement}" TickFrequency="{TemplateBinding ZoomIncrement}" Uid="Slider_3" Value="{Binding Zoom, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="100">
                        <Slider.Style>
                            <Style TargetType="{x:Type Slider}">
                                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="#00000000"/>
                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="IsSnapToTickEnabled" Value="True"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="MinWidth" Value="50"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Padding" Value="2,0"/>
                                <Setter Property="Height" Value="Auto"/>
                                <Setter Property="Opacity" Value="0.75"/>
                                <Setter Property="Delay" Value="1000"/>
                                <Setter Property="Interval" Value="250"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Slider}">
                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}" Uid="Border_45">
                                                <Grid ClipToBounds="False" Uid="Grid_22">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Uid="TickBar_1" Visibility="Collapsed"/>
                                                    <Border Background="{TemplateBinding Foreground}" CornerRadius="2" Height="2" Opacity="0.5" Grid.Row="1" Uid="Border_46"/>
                                                    <Canvas Height="4" Grid.Row="1" Uid="Canvas_7" VerticalAlignment="Center">
                                                        <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Top="1" Uid="Rectangle_17" Visibility="Hidden"/>
                                                    </Canvas>
                                                    <Track x:Name="PART_Track" Grid.Row="1" Uid="PART_Track">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="Slider.DecreaseLarge" Uid="RepeatButton_1">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border Background="Transparent" Uid="Border_43"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="Slider.IncreaseLarge" Uid="RepeatButton_2">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border Background="Transparent" Uid="Border_43"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb Background="{TemplateBinding Background}" Uid="Thumb_5">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="Cursor" Value="Hand"/>
                                                                        <Setter Property="Padding" Value="6"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Margin="-2" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_44">
                                                                                        <Viewbox HorizontalAlignment="Center" Uid="Viewbox_4" VerticalAlignment="Center" Width="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <Viewbox.LayoutTransform>
                                                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                            </Viewbox.LayoutTransform>
                                                                                            <Canvas Height="17" Uid="Canvas_6" Width="13">
                                                                                                <Path Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z" Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Uid="Path_13"/>
                                                                                                <Path Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z" StrokeEndLineCap="Round" StrokeDashCap="Round" Stroke="{TemplateBinding Background}" StrokeThickness="0.75" StrokeMiterLimit="1" StrokeLineJoin="Round" Uid="Path_14">
                                                                                                    <Path.Fill>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <LinearGradientBrush.RelativeTransform>
                                                                                                                <TransformGroup>
                                                                                                                    <TranslateTransform X="-0.5" Y="-0.5"/>
                                                                                                                    <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                                                                                    <RotateTransform Angle="110"/>
                                                                                                                    <TranslateTransform X="0.5" Y="0.5"/>
                                                                                                                </TransformGroup>
                                                                                                            </LinearGradientBrush.RelativeTransform>
                                                                                                            <GradientStop Color="#CC999999" Offset="0.5"/>
                                                                                                            <GradientStop Color="#CCFFFFFF" Offset="0.8"/>
                                                                                                            <GradientStop Color="#CCFFFFFF" Offset="0.2"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Path.Fill>
                                                                                                </Path>
                                                                                            </Canvas>
                                                                                        </Viewbox>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Uid="TickBar_2" Visibility="Collapsed"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="TickPlacement" Value="TopLeft">
                                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="TickPlacement" Value="BottomRight">
                                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="TickPlacement" Value="Both">
                                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Slider.Style>
                    </Slider>
                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="3" Command="NavigationCommands.IncreaseZoom" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding FontSize}" IsEnabled="{TemplateBinding CanIncreaseZoom}" Uid="RepeatButton_12" Width="{TemplateBinding FontSize}">
                        <RepeatButton.LayoutTransform>
                            <ScaleTransform ScaleY="2.2" ScaleX="2.2"/>
                        </RepeatButton.LayoutTransform>
                        <RepeatButton.Style>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="Padding" Value="0,2,2,2"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="Transparent" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_42">
                                                <Viewbox x:Name="Content" RenderTransformOrigin="0.5,0.5" Uid="Viewbox_3">
                                                    <Canvas Height="32" Uid="Canvas_5" Width="32">
                                                        <Path Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Height="32" Uid="Path_10" Width="32">
                                                            <Path.Data>
                                                                <GeometryGroup>
                                                                    <EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                        </Path>
                                                        <Path x:Name="Sheen" Height="32" Uid="Path_11" Width="32">
                                                            <Path.Data>
                                                                <GeometryGroup>
                                                                    <EllipseGeometry Center="16,16" RadiusY="16" RadiusX="16"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                            <Path.Fill>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                                                    <GradientStop Color="#66000000" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Path.Fill>
                                                        </Path>
                                                        <Path Canvas.Left="16" Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="5" Canvas.Top="16" Uid="Path_12">
                                                            <Path.Data>
                                                                <GeometryGroup>
                                                                    <LineGeometry EndPoint="10,0" StartPoint="-10,0"/>
                                                                    <LineGeometry EndPoint="0,10" StartPoint="0,-10"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                        </Path>
                                                    </Canvas>
                                                </Viewbox>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Fill" TargetName="Sheen">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                <GradientStop Color="#99000000" Offset="0"/>
                                                                <GradientStop Color="#66FFFFFF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.BasedOn>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="Padding" Value="5"/>
                                        <Setter Property="Delay" Value="1000"/>
                                        <Setter Property="Interval" Value="250"/>
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Padding" Value="3,1"/>
                                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Border Background="{TemplateBinding Background}" Uid="Border_39">
                                                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RenderTransformOrigin="0.5,0.5" Uid="ContentPresenter_2"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="1.1" ScaleX="1.1"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="RenderTransform" TargetName="Content">
                                                                        <Setter.Value>
                                                                            <ScaleTransform ScaleY="0.9" ScaleX="0.9"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="1"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Style.BasedOn>
                            </Style>
                        </RepeatButton.Style>
                    </RepeatButton>
                </Grid>
            </Grid>
            <Grid Uid="Grid_33">
                <Border x:Name="PART_ContentHost" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.IsTabStop="False" Margin="{TemplateBinding Padding}" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" Uid="Border_59"/>
            </Grid>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="ViewingMode" Value="Page">
                <Setter Property="IsChecked" TargetName="PageViewButton" Value="True"/>
            </Trigger>
            <Trigger Property="ViewingMode" Value="TwoPage">
                <Setter Property="IsChecked" TargetName="TwoPageViewButton" Value="True"/>
            </Trigger>
            <Trigger Property="ViewingMode" Value="Scroll">
                <Setter Property="IsChecked" TargetName="ScrollViewButton" Value="True"/>
                <Setter Property="Visibility" TargetName="PageCountAndButtons" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Document" Value="{x:Null}">
                <Setter Property="IsEnabled" TargetName="FindButton" Value="False"/>
            </Trigger>
            <Trigger Property="IsFindEnabled" Value="False">
                <Setter Property="IsEnabled" TargetName="FindButton" Value="False"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>